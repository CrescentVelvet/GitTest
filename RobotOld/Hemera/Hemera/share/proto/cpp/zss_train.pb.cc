// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zss_train.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zss_train.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ZSS {
namespace Protocol {
class TrainControlDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TrainControl> {
} _TrainControl_default_instance_;
class MessiInputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessiInput> {
} _MessiInput_default_instance_;
class MessiOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessiOutput> {
} _MessiOutput_default_instance_;

namespace protobuf_zss_5ftrain_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControl, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, enemy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiInput, angel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, vel_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, vel_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessiOutput, vel_w_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(TrainControl)},
  { 6, -1, sizeof(MessiInput)},
  { 14, -1, sizeof(MessiOutput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrainControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessiInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessiOutput_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "zss_train.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _TrainControl_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MessiInput_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MessiOutput_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TrainControl_default_instance_.DefaultConstruct();
  _MessiInput_default_instance_.DefaultConstruct();
  _MessiOutput_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017zss_train.proto\022\014ZSS.Protocol\"x\n\014Train"
      "Control\022/\n\005state\030\001 \001(\0162 .ZSS.Protocol.Tr"
      "ainControl.State\"7\n\005State\022\t\n\005READY\020\000\022\007\n\003"
      "RUN\020\001\022\017\n\013CALC_REWARD\020\002\022\t\n\005RESET\020\003\"8\n\nMes"
      "siInput\022\r\n\005enemy\030\001 \001(\005\022\014\n\004dist\030\002 \001(\002\022\r\n\005"
      "angel\030\003 \001(\002\":\n\013MessiOutput\022\r\n\005vel_x\030\001 \001("
      "\002\022\r\n\005vel_y\030\002 \001(\002\022\r\n\005vel_w\030\003 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 279);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zss_train.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_zss_5ftrain_2eproto

const ::google::protobuf::EnumDescriptor* TrainControl_State_descriptor() {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_enum_descriptors[0];
}
bool TrainControl_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrainControl_State TrainControl::READY;
const TrainControl_State TrainControl::RUN;
const TrainControl_State TrainControl::CALC_REWARD;
const TrainControl_State TrainControl::RESET;
const TrainControl_State TrainControl::State_MIN;
const TrainControl_State TrainControl::State_MAX;
const int TrainControl::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainControl::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainControl::TrainControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zss_5ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZSS.Protocol.TrainControl)
}
TrainControl::TrainControl(const TrainControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:ZSS.Protocol.TrainControl)
}

void TrainControl::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

TrainControl::~TrainControl() {
  // @@protoc_insertion_point(destructor:ZSS.Protocol.TrainControl)
  SharedDtor();
}

void TrainControl::SharedDtor() {
}

void TrainControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControl::descriptor() {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrainControl& TrainControl::default_instance() {
  protobuf_zss_5ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrainControl* TrainControl::New(::google::protobuf::Arena* arena) const {
  TrainControl* n = new TrainControl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainControl::Clear() {
// @@protoc_insertion_point(message_clear_start:ZSS.Protocol.TrainControl)
  state_ = 0;
}

bool TrainControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZSS.Protocol.TrainControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ZSS.Protocol.TrainControl.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::ZSS::Protocol::TrainControl_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZSS.Protocol.TrainControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZSS.Protocol.TrainControl)
  return false;
#undef DO_
}

void TrainControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZSS.Protocol.TrainControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ZSS.Protocol.TrainControl.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZSS.Protocol.TrainControl)
}

::google::protobuf::uint8* TrainControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSS.Protocol.TrainControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ZSS.Protocol.TrainControl.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZSS.Protocol.TrainControl)
  return target;
}

size_t TrainControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZSS.Protocol.TrainControl)
  size_t total_size = 0;

  // .ZSS.Protocol.TrainControl.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZSS.Protocol.TrainControl)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZSS.Protocol.TrainControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZSS.Protocol.TrainControl)
    MergeFrom(*source);
  }
}

void TrainControl::MergeFrom(const TrainControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZSS.Protocol.TrainControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void TrainControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZSS.Protocol.TrainControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControl::CopyFrom(const TrainControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZSS.Protocol.TrainControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControl::IsInitialized() const {
  return true;
}

void TrainControl::Swap(TrainControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainControl::InternalSwap(TrainControl* other) {
  std::swap(state_, other->state_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainControl::GetMetadata() const {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainControl

// .ZSS.Protocol.TrainControl.State state = 1;
void TrainControl::clear_state() {
  state_ = 0;
}
::ZSS::Protocol::TrainControl_State TrainControl::state() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.TrainControl.state)
  return static_cast< ::ZSS::Protocol::TrainControl_State >(state_);
}
void TrainControl::set_state(::ZSS::Protocol::TrainControl_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.TrainControl.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessiInput::kEnemyFieldNumber;
const int MessiInput::kDistFieldNumber;
const int MessiInput::kAngelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessiInput::MessiInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zss_5ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZSS.Protocol.MessiInput)
}
MessiInput::MessiInput(const MessiInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&enemy_, &from.enemy_,
    reinterpret_cast<char*>(&angel_) -
    reinterpret_cast<char*>(&enemy_) + sizeof(angel_));
  // @@protoc_insertion_point(copy_constructor:ZSS.Protocol.MessiInput)
}

void MessiInput::SharedCtor() {
  ::memset(&enemy_, 0, reinterpret_cast<char*>(&angel_) -
    reinterpret_cast<char*>(&enemy_) + sizeof(angel_));
  _cached_size_ = 0;
}

MessiInput::~MessiInput() {
  // @@protoc_insertion_point(destructor:ZSS.Protocol.MessiInput)
  SharedDtor();
}

void MessiInput::SharedDtor() {
}

void MessiInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessiInput::descriptor() {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessiInput& MessiInput::default_instance() {
  protobuf_zss_5ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessiInput* MessiInput::New(::google::protobuf::Arena* arena) const {
  MessiInput* n = new MessiInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessiInput::Clear() {
// @@protoc_insertion_point(message_clear_start:ZSS.Protocol.MessiInput)
  ::memset(&enemy_, 0, reinterpret_cast<char*>(&angel_) -
    reinterpret_cast<char*>(&enemy_) + sizeof(angel_));
}

bool MessiInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZSS.Protocol.MessiInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 enemy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enemy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZSS.Protocol.MessiInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZSS.Protocol.MessiInput)
  return false;
#undef DO_
}

void MessiInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZSS.Protocol.MessiInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enemy = 1;
  if (this->enemy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->enemy(), output);
  }

  // float dist = 2;
  if (this->dist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->dist(), output);
  }

  // float angel = 3;
  if (this->angel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angel(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZSS.Protocol.MessiInput)
}

::google::protobuf::uint8* MessiInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSS.Protocol.MessiInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enemy = 1;
  if (this->enemy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->enemy(), target);
  }

  // float dist = 2;
  if (this->dist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->dist(), target);
  }

  // float angel = 3;
  if (this->angel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZSS.Protocol.MessiInput)
  return target;
}

size_t MessiInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZSS.Protocol.MessiInput)
  size_t total_size = 0;

  // int32 enemy = 1;
  if (this->enemy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enemy());
  }

  // float dist = 2;
  if (this->dist() != 0) {
    total_size += 1 + 4;
  }

  // float angel = 3;
  if (this->angel() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessiInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZSS.Protocol.MessiInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MessiInput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessiInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZSS.Protocol.MessiInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZSS.Protocol.MessiInput)
    MergeFrom(*source);
  }
}

void MessiInput::MergeFrom(const MessiInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZSS.Protocol.MessiInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enemy() != 0) {
    set_enemy(from.enemy());
  }
  if (from.dist() != 0) {
    set_dist(from.dist());
  }
  if (from.angel() != 0) {
    set_angel(from.angel());
  }
}

void MessiInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZSS.Protocol.MessiInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessiInput::CopyFrom(const MessiInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZSS.Protocol.MessiInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessiInput::IsInitialized() const {
  return true;
}

void MessiInput::Swap(MessiInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessiInput::InternalSwap(MessiInput* other) {
  std::swap(enemy_, other->enemy_);
  std::swap(dist_, other->dist_);
  std::swap(angel_, other->angel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessiInput::GetMetadata() const {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessiInput

// int32 enemy = 1;
void MessiInput::clear_enemy() {
  enemy_ = 0;
}
::google::protobuf::int32 MessiInput::enemy() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MessiInput.enemy)
  return enemy_;
}
void MessiInput::set_enemy(::google::protobuf::int32 value) {
  
  enemy_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MessiInput.enemy)
}

// float dist = 2;
void MessiInput::clear_dist() {
  dist_ = 0;
}
float MessiInput::dist() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MessiInput.dist)
  return dist_;
}
void MessiInput::set_dist(float value) {
  
  dist_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MessiInput.dist)
}

// float angel = 3;
void MessiInput::clear_angel() {
  angel_ = 0;
}
float MessiInput::angel() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MessiInput.angel)
  return angel_;
}
void MessiInput::set_angel(float value) {
  
  angel_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MessiInput.angel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessiOutput::kVelXFieldNumber;
const int MessiOutput::kVelYFieldNumber;
const int MessiOutput::kVelWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessiOutput::MessiOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zss_5ftrain_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZSS.Protocol.MessiOutput)
}
MessiOutput::MessiOutput(const MessiOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vel_x_, &from.vel_x_,
    reinterpret_cast<char*>(&vel_w_) -
    reinterpret_cast<char*>(&vel_x_) + sizeof(vel_w_));
  // @@protoc_insertion_point(copy_constructor:ZSS.Protocol.MessiOutput)
}

void MessiOutput::SharedCtor() {
  ::memset(&vel_x_, 0, reinterpret_cast<char*>(&vel_w_) -
    reinterpret_cast<char*>(&vel_x_) + sizeof(vel_w_));
  _cached_size_ = 0;
}

MessiOutput::~MessiOutput() {
  // @@protoc_insertion_point(destructor:ZSS.Protocol.MessiOutput)
  SharedDtor();
}

void MessiOutput::SharedDtor() {
}

void MessiOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessiOutput::descriptor() {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessiOutput& MessiOutput::default_instance() {
  protobuf_zss_5ftrain_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessiOutput* MessiOutput::New(::google::protobuf::Arena* arena) const {
  MessiOutput* n = new MessiOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessiOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:ZSS.Protocol.MessiOutput)
  ::memset(&vel_x_, 0, reinterpret_cast<char*>(&vel_w_) -
    reinterpret_cast<char*>(&vel_x_) + sizeof(vel_w_));
}

bool MessiOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZSS.Protocol.MessiOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float vel_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vel_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vel_w = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZSS.Protocol.MessiOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZSS.Protocol.MessiOutput)
  return false;
#undef DO_
}

void MessiOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZSS.Protocol.MessiOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float vel_x = 1;
  if (this->vel_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->vel_x(), output);
  }

  // float vel_y = 2;
  if (this->vel_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->vel_y(), output);
  }

  // float vel_w = 3;
  if (this->vel_w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->vel_w(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZSS.Protocol.MessiOutput)
}

::google::protobuf::uint8* MessiOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSS.Protocol.MessiOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float vel_x = 1;
  if (this->vel_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->vel_x(), target);
  }

  // float vel_y = 2;
  if (this->vel_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->vel_y(), target);
  }

  // float vel_w = 3;
  if (this->vel_w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->vel_w(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZSS.Protocol.MessiOutput)
  return target;
}

size_t MessiOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZSS.Protocol.MessiOutput)
  size_t total_size = 0;

  // float vel_x = 1;
  if (this->vel_x() != 0) {
    total_size += 1 + 4;
  }

  // float vel_y = 2;
  if (this->vel_y() != 0) {
    total_size += 1 + 4;
  }

  // float vel_w = 3;
  if (this->vel_w() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessiOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZSS.Protocol.MessiOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MessiOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessiOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZSS.Protocol.MessiOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZSS.Protocol.MessiOutput)
    MergeFrom(*source);
  }
}

void MessiOutput::MergeFrom(const MessiOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZSS.Protocol.MessiOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vel_x() != 0) {
    set_vel_x(from.vel_x());
  }
  if (from.vel_y() != 0) {
    set_vel_y(from.vel_y());
  }
  if (from.vel_w() != 0) {
    set_vel_w(from.vel_w());
  }
}

void MessiOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZSS.Protocol.MessiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessiOutput::CopyFrom(const MessiOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZSS.Protocol.MessiOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessiOutput::IsInitialized() const {
  return true;
}

void MessiOutput::Swap(MessiOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessiOutput::InternalSwap(MessiOutput* other) {
  std::swap(vel_x_, other->vel_x_);
  std::swap(vel_y_, other->vel_y_);
  std::swap(vel_w_, other->vel_w_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessiOutput::GetMetadata() const {
  protobuf_zss_5ftrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zss_5ftrain_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessiOutput

// float vel_x = 1;
void MessiOutput::clear_vel_x() {
  vel_x_ = 0;
}
float MessiOutput::vel_x() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MessiOutput.vel_x)
  return vel_x_;
}
void MessiOutput::set_vel_x(float value) {
  
  vel_x_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MessiOutput.vel_x)
}

// float vel_y = 2;
void MessiOutput::clear_vel_y() {
  vel_y_ = 0;
}
float MessiOutput::vel_y() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MessiOutput.vel_y)
  return vel_y_;
}
void MessiOutput::set_vel_y(float value) {
  
  vel_y_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MessiOutput.vel_y)
}

// float vel_w = 3;
void MessiOutput::clear_vel_w() {
  vel_w_ = 0;
}
float MessiOutput::vel_w() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MessiOutput.vel_w)
  return vel_w_;
}
void MessiOutput::set_vel_w(float value) {
  
  vel_w_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MessiOutput.vel_w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol
}  // namespace ZSS

// @@protoc_insertion_point(global_scope)
