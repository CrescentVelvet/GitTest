// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Commands.proto

#ifndef PROTOBUF_grSim_5fCommands_2eproto__INCLUDED
#define PROTOBUF_grSim_5fCommands_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class grSim_Commands;
class grSim_CommandsDefaultTypeInternal;
extern grSim_CommandsDefaultTypeInternal _grSim_Commands_default_instance_;
class grSim_Robot_Command;
class grSim_Robot_CommandDefaultTypeInternal;
extern grSim_Robot_CommandDefaultTypeInternal _grSim_Robot_Command_default_instance_;

namespace protobuf_grSim_5fCommands_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_grSim_5fCommands_2eproto

// ===================================================================

class grSim_Robot_Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grSim_Robot_Command) */ {
 public:
  grSim_Robot_Command();
  virtual ~grSim_Robot_Command();

  grSim_Robot_Command(const grSim_Robot_Command& from);

  inline grSim_Robot_Command& operator=(const grSim_Robot_Command& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const grSim_Robot_Command& default_instance();

  static inline const grSim_Robot_Command* internal_default_instance() {
    return reinterpret_cast<const grSim_Robot_Command*>(
               &_grSim_Robot_Command_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(grSim_Robot_Command* other);

  // implements Message ----------------------------------------------

  inline grSim_Robot_Command* New() const PROTOBUF_FINAL { return New(NULL); }

  grSim_Robot_Command* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const grSim_Robot_Command& from);
  void MergeFrom(const grSim_Robot_Command& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(grSim_Robot_Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float kickspeedx = 2;
  void clear_kickspeedx();
  static const int kKickspeedxFieldNumber = 2;
  float kickspeedx() const;
  void set_kickspeedx(float value);

  // float kickspeedz = 3;
  void clear_kickspeedz();
  static const int kKickspeedzFieldNumber = 3;
  float kickspeedz() const;
  void set_kickspeedz(float value);

  // float veltangent = 4;
  void clear_veltangent();
  static const int kVeltangentFieldNumber = 4;
  float veltangent() const;
  void set_veltangent(float value);

  // float velnormal = 5;
  void clear_velnormal();
  static const int kVelnormalFieldNumber = 5;
  float velnormal() const;
  void set_velnormal(float value);

  // float velangular = 6;
  void clear_velangular();
  static const int kVelangularFieldNumber = 6;
  float velangular() const;
  void set_velangular(float value);

  // bool spinner = 7;
  void clear_spinner();
  static const int kSpinnerFieldNumber = 7;
  bool spinner() const;
  void set_spinner(bool value);

  // bool wheelsspeed = 8;
  void clear_wheelsspeed();
  static const int kWheelsspeedFieldNumber = 8;
  bool wheelsspeed() const;
  void set_wheelsspeed(bool value);

  // float wheel1 = 9;
  void clear_wheel1();
  static const int kWheel1FieldNumber = 9;
  float wheel1() const;
  void set_wheel1(float value);

  // float wheel2 = 10;
  void clear_wheel2();
  static const int kWheel2FieldNumber = 10;
  float wheel2() const;
  void set_wheel2(float value);

  // float wheel3 = 11;
  void clear_wheel3();
  static const int kWheel3FieldNumber = 11;
  float wheel3() const;
  void set_wheel3(float value);

  // float wheel4 = 12;
  void clear_wheel4();
  static const int kWheel4FieldNumber = 12;
  float wheel4() const;
  void set_wheel4(float value);

  // @@protoc_insertion_point(class_scope:grSim_Robot_Command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  float kickspeedx_;
  float kickspeedz_;
  float veltangent_;
  float velnormal_;
  float velangular_;
  bool spinner_;
  bool wheelsspeed_;
  float wheel1_;
  float wheel2_;
  float wheel3_;
  float wheel4_;
  mutable int _cached_size_;
  friend struct protobuf_grSim_5fCommands_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class grSim_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grSim_Commands) */ {
 public:
  grSim_Commands();
  virtual ~grSim_Commands();

  grSim_Commands(const grSim_Commands& from);

  inline grSim_Commands& operator=(const grSim_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const grSim_Commands& default_instance();

  static inline const grSim_Commands* internal_default_instance() {
    return reinterpret_cast<const grSim_Commands*>(
               &_grSim_Commands_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(grSim_Commands* other);

  // implements Message ----------------------------------------------

  inline grSim_Commands* New() const PROTOBUF_FINAL { return New(NULL); }

  grSim_Commands* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const grSim_Commands& from);
  void MergeFrom(const grSim_Commands& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(grSim_Commands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .grSim_Robot_Command robot_commands = 3;
  int robot_commands_size() const;
  void clear_robot_commands();
  static const int kRobotCommandsFieldNumber = 3;
  const ::grSim_Robot_Command& robot_commands(int index) const;
  ::grSim_Robot_Command* mutable_robot_commands(int index);
  ::grSim_Robot_Command* add_robot_commands();
  ::google::protobuf::RepeatedPtrField< ::grSim_Robot_Command >*
      mutable_robot_commands();
  const ::google::protobuf::RepeatedPtrField< ::grSim_Robot_Command >&
      robot_commands() const;

  // double timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // bool isteamyellow = 2;
  void clear_isteamyellow();
  static const int kIsteamyellowFieldNumber = 2;
  bool isteamyellow() const;
  void set_isteamyellow(bool value);

  // @@protoc_insertion_point(class_scope:grSim_Commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::grSim_Robot_Command > robot_commands_;
  double timestamp_;
  bool isteamyellow_;
  mutable int _cached_size_;
  friend struct protobuf_grSim_5fCommands_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// grSim_Robot_Command

// uint32 id = 1;
inline void grSim_Robot_Command::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 grSim_Robot_Command::id() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.id)
  return id_;
}
inline void grSim_Robot_Command::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.id)
}

// float kickspeedx = 2;
inline void grSim_Robot_Command::clear_kickspeedx() {
  kickspeedx_ = 0;
}
inline float grSim_Robot_Command::kickspeedx() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.kickspeedx)
  return kickspeedx_;
}
inline void grSim_Robot_Command::set_kickspeedx(float value) {
  
  kickspeedx_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.kickspeedx)
}

// float kickspeedz = 3;
inline void grSim_Robot_Command::clear_kickspeedz() {
  kickspeedz_ = 0;
}
inline float grSim_Robot_Command::kickspeedz() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.kickspeedz)
  return kickspeedz_;
}
inline void grSim_Robot_Command::set_kickspeedz(float value) {
  
  kickspeedz_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.kickspeedz)
}

// float veltangent = 4;
inline void grSim_Robot_Command::clear_veltangent() {
  veltangent_ = 0;
}
inline float grSim_Robot_Command::veltangent() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.veltangent)
  return veltangent_;
}
inline void grSim_Robot_Command::set_veltangent(float value) {
  
  veltangent_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.veltangent)
}

// float velnormal = 5;
inline void grSim_Robot_Command::clear_velnormal() {
  velnormal_ = 0;
}
inline float grSim_Robot_Command::velnormal() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.velnormal)
  return velnormal_;
}
inline void grSim_Robot_Command::set_velnormal(float value) {
  
  velnormal_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.velnormal)
}

// float velangular = 6;
inline void grSim_Robot_Command::clear_velangular() {
  velangular_ = 0;
}
inline float grSim_Robot_Command::velangular() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.velangular)
  return velangular_;
}
inline void grSim_Robot_Command::set_velangular(float value) {
  
  velangular_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.velangular)
}

// bool spinner = 7;
inline void grSim_Robot_Command::clear_spinner() {
  spinner_ = false;
}
inline bool grSim_Robot_Command::spinner() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.spinner)
  return spinner_;
}
inline void grSim_Robot_Command::set_spinner(bool value) {
  
  spinner_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.spinner)
}

// bool wheelsspeed = 8;
inline void grSim_Robot_Command::clear_wheelsspeed() {
  wheelsspeed_ = false;
}
inline bool grSim_Robot_Command::wheelsspeed() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.wheelsspeed)
  return wheelsspeed_;
}
inline void grSim_Robot_Command::set_wheelsspeed(bool value) {
  
  wheelsspeed_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.wheelsspeed)
}

// float wheel1 = 9;
inline void grSim_Robot_Command::clear_wheel1() {
  wheel1_ = 0;
}
inline float grSim_Robot_Command::wheel1() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.wheel1)
  return wheel1_;
}
inline void grSim_Robot_Command::set_wheel1(float value) {
  
  wheel1_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.wheel1)
}

// float wheel2 = 10;
inline void grSim_Robot_Command::clear_wheel2() {
  wheel2_ = 0;
}
inline float grSim_Robot_Command::wheel2() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.wheel2)
  return wheel2_;
}
inline void grSim_Robot_Command::set_wheel2(float value) {
  
  wheel2_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.wheel2)
}

// float wheel3 = 11;
inline void grSim_Robot_Command::clear_wheel3() {
  wheel3_ = 0;
}
inline float grSim_Robot_Command::wheel3() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.wheel3)
  return wheel3_;
}
inline void grSim_Robot_Command::set_wheel3(float value) {
  
  wheel3_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.wheel3)
}

// float wheel4 = 12;
inline void grSim_Robot_Command::clear_wheel4() {
  wheel4_ = 0;
}
inline float grSim_Robot_Command::wheel4() const {
  // @@protoc_insertion_point(field_get:grSim_Robot_Command.wheel4)
  return wheel4_;
}
inline void grSim_Robot_Command::set_wheel4(float value) {
  
  wheel4_ = value;
  // @@protoc_insertion_point(field_set:grSim_Robot_Command.wheel4)
}

// -------------------------------------------------------------------

// grSim_Commands

// double timestamp = 1;
inline void grSim_Commands::clear_timestamp() {
  timestamp_ = 0;
}
inline double grSim_Commands::timestamp() const {
  // @@protoc_insertion_point(field_get:grSim_Commands.timestamp)
  return timestamp_;
}
inline void grSim_Commands::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:grSim_Commands.timestamp)
}

// bool isteamyellow = 2;
inline void grSim_Commands::clear_isteamyellow() {
  isteamyellow_ = false;
}
inline bool grSim_Commands::isteamyellow() const {
  // @@protoc_insertion_point(field_get:grSim_Commands.isteamyellow)
  return isteamyellow_;
}
inline void grSim_Commands::set_isteamyellow(bool value) {
  
  isteamyellow_ = value;
  // @@protoc_insertion_point(field_set:grSim_Commands.isteamyellow)
}

// repeated .grSim_Robot_Command robot_commands = 3;
inline int grSim_Commands::robot_commands_size() const {
  return robot_commands_.size();
}
inline void grSim_Commands::clear_robot_commands() {
  robot_commands_.Clear();
}
inline const ::grSim_Robot_Command& grSim_Commands::robot_commands(int index) const {
  // @@protoc_insertion_point(field_get:grSim_Commands.robot_commands)
  return robot_commands_.Get(index);
}
inline ::grSim_Robot_Command* grSim_Commands::mutable_robot_commands(int index) {
  // @@protoc_insertion_point(field_mutable:grSim_Commands.robot_commands)
  return robot_commands_.Mutable(index);
}
inline ::grSim_Robot_Command* grSim_Commands::add_robot_commands() {
  // @@protoc_insertion_point(field_add:grSim_Commands.robot_commands)
  return robot_commands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::grSim_Robot_Command >*
grSim_Commands::mutable_robot_commands() {
  // @@protoc_insertion_point(field_mutable_list:grSim_Commands.robot_commands)
  return &robot_commands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::grSim_Robot_Command >&
grSim_Commands::robot_commands() const {
  // @@protoc_insertion_point(field_list:grSim_Commands.robot_commands)
  return robot_commands_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_grSim_5fCommands_2eproto__INCLUDED
