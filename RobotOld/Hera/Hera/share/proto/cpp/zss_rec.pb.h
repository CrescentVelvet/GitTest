// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zss_rec.proto

#ifndef PROTOBUF_zss_5frec_2eproto__INCLUDED
#define PROTOBUF_zss_5frec_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "zss_debug.pb.h"
// @@protoc_insertion_point(includes)
namespace ZSS {
namespace Protocol {
class Ball4Rec;
class Ball4RecDefaultTypeInternal;
extern Ball4RecDefaultTypeInternal _Ball4Rec_default_instance_;
class Balls4Rec;
class Balls4RecDefaultTypeInternal;
extern Balls4RecDefaultTypeInternal _Balls4Rec_default_instance_;
class Debug_Arc;
class Debug_ArcDefaultTypeInternal;
extern Debug_ArcDefaultTypeInternal _Debug_Arc_default_instance_;
class Debug_Curve;
class Debug_CurveDefaultTypeInternal;
extern Debug_CurveDefaultTypeInternal _Debug_Curve_default_instance_;
class Debug_Curve_;
class Debug_Curve_DefaultTypeInternal;
extern Debug_Curve_DefaultTypeInternal _Debug_Curve__default_instance_;
class Debug_Line;
class Debug_LineDefaultTypeInternal;
extern Debug_LineDefaultTypeInternal _Debug_Line_default_instance_;
class Debug_Msg;
class Debug_MsgDefaultTypeInternal;
extern Debug_MsgDefaultTypeInternal _Debug_Msg_default_instance_;
class Debug_Msgs;
class Debug_MsgsDefaultTypeInternal;
extern Debug_MsgsDefaultTypeInternal _Debug_Msgs_default_instance_;
class Debug_Points;
class Debug_PointsDefaultTypeInternal;
extern Debug_PointsDefaultTypeInternal _Debug_Points_default_instance_;
class Debug_Polygon;
class Debug_PolygonDefaultTypeInternal;
extern Debug_PolygonDefaultTypeInternal _Debug_Polygon_default_instance_;
class Debug_Robot;
class Debug_RobotDefaultTypeInternal;
extern Debug_RobotDefaultTypeInternal _Debug_Robot_default_instance_;
class Debug_Score;
class Debug_ScoreDefaultTypeInternal;
extern Debug_ScoreDefaultTypeInternal _Debug_Score_default_instance_;
class Debug_Scores;
class Debug_ScoresDefaultTypeInternal;
extern Debug_ScoresDefaultTypeInternal _Debug_Scores_default_instance_;
class Debug_Text;
class Debug_TextDefaultTypeInternal;
extern Debug_TextDefaultTypeInternal _Debug_Text_default_instance_;
class MaintainVision;
class MaintainVisionDefaultTypeInternal;
extern MaintainVisionDefaultTypeInternal _MaintainVision_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class RecMessage;
class RecMessageDefaultTypeInternal;
extern RecMessageDefaultTypeInternal _RecMessage_default_instance_;
class RecMessages;
class RecMessagesDefaultTypeInternal;
extern RecMessagesDefaultTypeInternal _RecMessages_default_instance_;
class Rectangle;
class RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
class Robot4Rec;
class Robot4RecDefaultTypeInternal;
extern Robot4RecDefaultTypeInternal _Robot4Rec_default_instance_;
class SelectedArea;
class SelectedAreaDefaultTypeInternal;
extern SelectedAreaDefaultTypeInternal _SelectedArea_default_instance_;
class TeamRobotMsg;
class TeamRobotMsgDefaultTypeInternal;
extern TeamRobotMsgDefaultTypeInternal _TeamRobotMsg_default_instance_;
}  // namespace Protocol
}  // namespace ZSS

namespace ZSS {
namespace Protocol {

namespace protobuf_zss_5frec_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_zss_5frec_2eproto

// ===================================================================

class RecMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.RecMessages) */ {
 public:
  RecMessages();
  virtual ~RecMessages();

  RecMessages(const RecMessages& from);

  inline RecMessages& operator=(const RecMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecMessages& default_instance();

  static inline const RecMessages* internal_default_instance() {
    return reinterpret_cast<const RecMessages*>(
               &_RecMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RecMessages* other);

  // implements Message ----------------------------------------------

  inline RecMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  RecMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecMessages& from);
  void MergeFrom(const RecMessages& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZSS.Protocol.RecMessage recMsgs = 1;
  int recmsgs_size() const;
  void clear_recmsgs();
  static const int kRecMsgsFieldNumber = 1;
  const ::ZSS::Protocol::RecMessage& recmsgs(int index) const;
  ::ZSS::Protocol::RecMessage* mutable_recmsgs(int index);
  ::ZSS::Protocol::RecMessage* add_recmsgs();
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::RecMessage >*
      mutable_recmsgs();
  const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::RecMessage >&
      recmsgs() const;

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.RecMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::RecMessage > recmsgs_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.RecMessage) */ {
 public:
  RecMessage();
  virtual ~RecMessage();

  RecMessage(const RecMessage& from);

  inline RecMessage& operator=(const RecMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecMessage& default_instance();

  static inline const RecMessage* internal_default_instance() {
    return reinterpret_cast<const RecMessage*>(
               &_RecMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RecMessage* other);

  // implements Message ----------------------------------------------

  inline RecMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RecMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecMessage& from);
  void MergeFrom(const RecMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZSS.Protocol.Debug_Msgs debugMsgs = 4;
  int debugmsgs_size() const;
  void clear_debugmsgs();
  static const int kDebugMsgsFieldNumber = 4;
  const ::ZSS::Protocol::Debug_Msgs& debugmsgs(int index) const;
  ::ZSS::Protocol::Debug_Msgs* mutable_debugmsgs(int index);
  ::ZSS::Protocol::Debug_Msgs* add_debugmsgs();
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Debug_Msgs >*
      mutable_debugmsgs();
  const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Debug_Msgs >&
      debugmsgs() const;

  // required .ZSS.Protocol.SelectedArea selectedArea = 2;
  bool has_selectedarea() const;
  void clear_selectedarea();
  static const int kSelectedAreaFieldNumber = 2;
  const ::ZSS::Protocol::SelectedArea& selectedarea() const;
  ::ZSS::Protocol::SelectedArea* mutable_selectedarea();
  ::ZSS::Protocol::SelectedArea* release_selectedarea();
  void set_allocated_selectedarea(::ZSS::Protocol::SelectedArea* selectedarea);

  // required .ZSS.Protocol.MaintainVision maintainVision = 3;
  bool has_maintainvision() const;
  void clear_maintainvision();
  static const int kMaintainVisionFieldNumber = 3;
  const ::ZSS::Protocol::MaintainVision& maintainvision() const;
  ::ZSS::Protocol::MaintainVision* mutable_maintainvision();
  ::ZSS::Protocol::MaintainVision* release_maintainvision();
  void set_allocated_maintainvision(::ZSS::Protocol::MaintainVision* maintainvision);

  // required bool ctrlC = 1;
  bool has_ctrlc() const;
  void clear_ctrlc();
  static const int kCtrlCFieldNumber = 1;
  bool ctrlc() const;
  void set_ctrlc(bool value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.RecMessage)
 private:
  void set_has_ctrlc();
  void clear_has_ctrlc();
  void set_has_selectedarea();
  void clear_has_selectedarea();
  void set_has_maintainvision();
  void clear_has_maintainvision();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Debug_Msgs > debugmsgs_;
  ::ZSS::Protocol::SelectedArea* selectedarea_;
  ::ZSS::Protocol::MaintainVision* maintainvision_;
  bool ctrlc_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectedArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.SelectedArea) */ {
 public:
  SelectedArea();
  virtual ~SelectedArea();

  SelectedArea(const SelectedArea& from);

  inline SelectedArea& operator=(const SelectedArea& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectedArea& default_instance();

  static inline const SelectedArea* internal_default_instance() {
    return reinterpret_cast<const SelectedArea*>(
               &_SelectedArea_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SelectedArea* other);

  // implements Message ----------------------------------------------

  inline SelectedArea* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectedArea* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectedArea& from);
  void MergeFrom(const SelectedArea& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectedArea* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float maxX = 1;
  bool has_maxx() const;
  void clear_maxx();
  static const int kMaxXFieldNumber = 1;
  float maxx() const;
  void set_maxx(float value);

  // required float maxY = 2;
  bool has_maxy() const;
  void clear_maxy();
  static const int kMaxYFieldNumber = 2;
  float maxy() const;
  void set_maxy(float value);

  // required float minX = 3;
  bool has_minx() const;
  void clear_minx();
  static const int kMinXFieldNumber = 3;
  float minx() const;
  void set_minx(float value);

  // required float minY = 4;
  bool has_miny() const;
  void clear_miny();
  static const int kMinYFieldNumber = 4;
  float miny() const;
  void set_miny(float value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.SelectedArea)
 private:
  void set_has_maxx();
  void clear_has_maxx();
  void set_has_maxy();
  void clear_has_maxy();
  void set_has_minx();
  void clear_has_minx();
  void set_has_miny();
  void clear_has_miny();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float maxx_;
  float maxy_;
  float minx_;
  float miny_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaintainVision : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.MaintainVision) */ {
 public:
  MaintainVision();
  virtual ~MaintainVision();

  MaintainVision(const MaintainVision& from);

  inline MaintainVision& operator=(const MaintainVision& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaintainVision& default_instance();

  static inline const MaintainVision* internal_default_instance() {
    return reinterpret_cast<const MaintainVision*>(
               &_MaintainVision_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MaintainVision* other);

  // implements Message ----------------------------------------------

  inline MaintainVision* New() const PROTOBUF_FINAL { return New(NULL); }

  MaintainVision* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaintainVision& from);
  void MergeFrom(const MaintainVision& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaintainVision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZSS.Protocol.TeamRobotMsg processMsg = 3;
  int processmsg_size() const;
  void clear_processmsg();
  static const int kProcessMsgFieldNumber = 3;
  const ::ZSS::Protocol::TeamRobotMsg& processmsg(int index) const;
  ::ZSS::Protocol::TeamRobotMsg* mutable_processmsg(int index);
  ::ZSS::Protocol::TeamRobotMsg* add_processmsg();
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >*
      mutable_processmsg();
  const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >&
      processmsg() const;

  // repeated .ZSS.Protocol.TeamRobotMsg maintain = 4;
  int maintain_size() const;
  void clear_maintain();
  static const int kMaintainFieldNumber = 4;
  const ::ZSS::Protocol::TeamRobotMsg& maintain(int index) const;
  ::ZSS::Protocol::TeamRobotMsg* mutable_maintain(int index);
  ::ZSS::Protocol::TeamRobotMsg* add_maintain();
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >*
      mutable_maintain();
  const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >&
      maintain() const;

  // required .ZSS.Protocol.Balls4Rec balls = 5;
  bool has_balls() const;
  void clear_balls();
  static const int kBallsFieldNumber = 5;
  const ::ZSS::Protocol::Balls4Rec& balls() const;
  ::ZSS::Protocol::Balls4Rec* mutable_balls();
  ::ZSS::Protocol::Balls4Rec* release_balls();
  void set_allocated_balls(::ZSS::Protocol::Balls4Rec* balls);

  // required int32 lastTouch = 1;
  bool has_lasttouch() const;
  void clear_lasttouch();
  static const int kLastTouchFieldNumber = 1;
  ::google::protobuf::int32 lasttouch() const;
  void set_lasttouch(::google::protobuf::int32 value);

  // required int32 lastTouchTeam = 2;
  bool has_lasttouchteam() const;
  void clear_lasttouchteam();
  static const int kLastTouchTeamFieldNumber = 2;
  ::google::protobuf::int32 lasttouchteam() const;
  void set_lasttouchteam(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.MaintainVision)
 private:
  void set_has_lasttouch();
  void clear_has_lasttouch();
  void set_has_lasttouchteam();
  void clear_has_lasttouchteam();
  void set_has_balls();
  void clear_has_balls();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg > processmsg_;
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg > maintain_;
  ::ZSS::Protocol::Balls4Rec* balls_;
  ::google::protobuf::int32 lasttouch_;
  ::google::protobuf::int32 lasttouchteam_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamRobotMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.TeamRobotMsg) */ {
 public:
  TeamRobotMsg();
  virtual ~TeamRobotMsg();

  TeamRobotMsg(const TeamRobotMsg& from);

  inline TeamRobotMsg& operator=(const TeamRobotMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRobotMsg& default_instance();

  static inline const TeamRobotMsg* internal_default_instance() {
    return reinterpret_cast<const TeamRobotMsg*>(
               &_TeamRobotMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TeamRobotMsg* other);

  // implements Message ----------------------------------------------

  inline TeamRobotMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamRobotMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamRobotMsg& from);
  void MergeFrom(const TeamRobotMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamRobotMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZSS.Protocol.Robot4Rec robot = 2;
  int robot_size() const;
  void clear_robot();
  static const int kRobotFieldNumber = 2;
  const ::ZSS::Protocol::Robot4Rec& robot(int index) const;
  ::ZSS::Protocol::Robot4Rec* mutable_robot(int index);
  ::ZSS::Protocol::Robot4Rec* add_robot();
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Robot4Rec >*
      mutable_robot();
  const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Robot4Rec >&
      robot() const;

  // required int32 size = 1;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.TeamRobotMsg)
 private:
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Robot4Rec > robot_;
  ::google::protobuf::int32 size_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Robot4Rec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.Robot4Rec) */ {
 public:
  Robot4Rec();
  virtual ~Robot4Rec();

  Robot4Rec(const Robot4Rec& from);

  inline Robot4Rec& operator=(const Robot4Rec& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Robot4Rec& default_instance();

  static inline const Robot4Rec* internal_default_instance() {
    return reinterpret_cast<const Robot4Rec*>(
               &_Robot4Rec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Robot4Rec* other);

  // implements Message ----------------------------------------------

  inline Robot4Rec* New() const PROTOBUF_FINAL { return New(NULL); }

  Robot4Rec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Robot4Rec& from);
  void MergeFrom(const Robot4Rec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Robot4Rec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double posX = 2;
  bool has_posx() const;
  void clear_posx();
  static const int kPosXFieldNumber = 2;
  double posx() const;
  void set_posx(double value);

  // required double posY = 3;
  bool has_posy() const;
  void clear_posy();
  static const int kPosYFieldNumber = 3;
  double posy() const;
  void set_posy(double value);

  // required double angle = 4;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 4;
  double angle() const;
  void set_angle(double value);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.Robot4Rec)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_posx();
  void clear_has_posx();
  void set_has_posy();
  void clear_has_posy();
  void set_has_angle();
  void clear_has_angle();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double posx_;
  double posy_;
  double angle_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Balls4Rec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.Balls4Rec) */ {
 public:
  Balls4Rec();
  virtual ~Balls4Rec();

  Balls4Rec(const Balls4Rec& from);

  inline Balls4Rec& operator=(const Balls4Rec& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Balls4Rec& default_instance();

  static inline const Balls4Rec* internal_default_instance() {
    return reinterpret_cast<const Balls4Rec*>(
               &_Balls4Rec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Balls4Rec* other);

  // implements Message ----------------------------------------------

  inline Balls4Rec* New() const PROTOBUF_FINAL { return New(NULL); }

  Balls4Rec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Balls4Rec& from);
  void MergeFrom(const Balls4Rec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Balls4Rec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ZSS.Protocol.Ball4Rec ball = 2;
  int ball_size() const;
  void clear_ball();
  static const int kBallFieldNumber = 2;
  const ::ZSS::Protocol::Ball4Rec& ball(int index) const;
  ::ZSS::Protocol::Ball4Rec* mutable_ball(int index);
  ::ZSS::Protocol::Ball4Rec* add_ball();
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Ball4Rec >*
      mutable_ball();
  const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Ball4Rec >&
      ball() const;

  // required int32 size = 1;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.Balls4Rec)
 private:
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Ball4Rec > ball_;
  ::google::protobuf::int32 size_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ball4Rec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ZSS.Protocol.Ball4Rec) */ {
 public:
  Ball4Rec();
  virtual ~Ball4Rec();

  Ball4Rec(const Ball4Rec& from);

  inline Ball4Rec& operator=(const Ball4Rec& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ball4Rec& default_instance();

  static inline const Ball4Rec* internal_default_instance() {
    return reinterpret_cast<const Ball4Rec*>(
               &_Ball4Rec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Ball4Rec* other);

  // implements Message ----------------------------------------------

  inline Ball4Rec* New() const PROTOBUF_FINAL { return New(NULL); }

  Ball4Rec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Ball4Rec& from);
  void MergeFrom(const Ball4Rec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Ball4Rec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double posX = 1;
  bool has_posx() const;
  void clear_posx();
  static const int kPosXFieldNumber = 1;
  double posx() const;
  void set_posx(double value);

  // required double posY = 2;
  bool has_posy() const;
  void clear_posy();
  static const int kPosYFieldNumber = 2;
  double posy() const;
  void set_posy(double value);

  // optional bool valid = 3;
  bool has_valid() const;
  void clear_valid();
  static const int kValidFieldNumber = 3;
  bool valid() const;
  void set_valid(bool value);

  // @@protoc_insertion_point(class_scope:ZSS.Protocol.Ball4Rec)
 private:
  void set_has_posx();
  void clear_has_posx();
  void set_has_posy();
  void clear_has_posy();
  void set_has_valid();
  void clear_has_valid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double posx_;
  double posy_;
  bool valid_;
  friend struct protobuf_zss_5frec_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RecMessages

// repeated .ZSS.Protocol.RecMessage recMsgs = 1;
inline int RecMessages::recmsgs_size() const {
  return recmsgs_.size();
}
inline void RecMessages::clear_recmsgs() {
  recmsgs_.Clear();
}
inline const ::ZSS::Protocol::RecMessage& RecMessages::recmsgs(int index) const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.RecMessages.recMsgs)
  return recmsgs_.Get(index);
}
inline ::ZSS::Protocol::RecMessage* RecMessages::mutable_recmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.RecMessages.recMsgs)
  return recmsgs_.Mutable(index);
}
inline ::ZSS::Protocol::RecMessage* RecMessages::add_recmsgs() {
  // @@protoc_insertion_point(field_add:ZSS.Protocol.RecMessages.recMsgs)
  return recmsgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::RecMessage >*
RecMessages::mutable_recmsgs() {
  // @@protoc_insertion_point(field_mutable_list:ZSS.Protocol.RecMessages.recMsgs)
  return &recmsgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::RecMessage >&
RecMessages::recmsgs() const {
  // @@protoc_insertion_point(field_list:ZSS.Protocol.RecMessages.recMsgs)
  return recmsgs_;
}

// -------------------------------------------------------------------

// RecMessage

// required bool ctrlC = 1;
inline bool RecMessage::has_ctrlc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecMessage::set_has_ctrlc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecMessage::clear_has_ctrlc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecMessage::clear_ctrlc() {
  ctrlc_ = false;
  clear_has_ctrlc();
}
inline bool RecMessage::ctrlc() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.RecMessage.ctrlC)
  return ctrlc_;
}
inline void RecMessage::set_ctrlc(bool value) {
  set_has_ctrlc();
  ctrlc_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.RecMessage.ctrlC)
}

// required .ZSS.Protocol.SelectedArea selectedArea = 2;
inline bool RecMessage::has_selectedarea() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecMessage::set_has_selectedarea() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecMessage::clear_has_selectedarea() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecMessage::clear_selectedarea() {
  if (selectedarea_ != NULL) selectedarea_->::ZSS::Protocol::SelectedArea::Clear();
  clear_has_selectedarea();
}
inline const ::ZSS::Protocol::SelectedArea& RecMessage::selectedarea() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.RecMessage.selectedArea)
  return selectedarea_ != NULL ? *selectedarea_
                         : *::ZSS::Protocol::SelectedArea::internal_default_instance();
}
inline ::ZSS::Protocol::SelectedArea* RecMessage::mutable_selectedarea() {
  set_has_selectedarea();
  if (selectedarea_ == NULL) {
    selectedarea_ = new ::ZSS::Protocol::SelectedArea;
  }
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.RecMessage.selectedArea)
  return selectedarea_;
}
inline ::ZSS::Protocol::SelectedArea* RecMessage::release_selectedarea() {
  // @@protoc_insertion_point(field_release:ZSS.Protocol.RecMessage.selectedArea)
  clear_has_selectedarea();
  ::ZSS::Protocol::SelectedArea* temp = selectedarea_;
  selectedarea_ = NULL;
  return temp;
}
inline void RecMessage::set_allocated_selectedarea(::ZSS::Protocol::SelectedArea* selectedarea) {
  delete selectedarea_;
  selectedarea_ = selectedarea;
  if (selectedarea) {
    set_has_selectedarea();
  } else {
    clear_has_selectedarea();
  }
  // @@protoc_insertion_point(field_set_allocated:ZSS.Protocol.RecMessage.selectedArea)
}

// required .ZSS.Protocol.MaintainVision maintainVision = 3;
inline bool RecMessage::has_maintainvision() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecMessage::set_has_maintainvision() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecMessage::clear_has_maintainvision() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecMessage::clear_maintainvision() {
  if (maintainvision_ != NULL) maintainvision_->::ZSS::Protocol::MaintainVision::Clear();
  clear_has_maintainvision();
}
inline const ::ZSS::Protocol::MaintainVision& RecMessage::maintainvision() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.RecMessage.maintainVision)
  return maintainvision_ != NULL ? *maintainvision_
                         : *::ZSS::Protocol::MaintainVision::internal_default_instance();
}
inline ::ZSS::Protocol::MaintainVision* RecMessage::mutable_maintainvision() {
  set_has_maintainvision();
  if (maintainvision_ == NULL) {
    maintainvision_ = new ::ZSS::Protocol::MaintainVision;
  }
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.RecMessage.maintainVision)
  return maintainvision_;
}
inline ::ZSS::Protocol::MaintainVision* RecMessage::release_maintainvision() {
  // @@protoc_insertion_point(field_release:ZSS.Protocol.RecMessage.maintainVision)
  clear_has_maintainvision();
  ::ZSS::Protocol::MaintainVision* temp = maintainvision_;
  maintainvision_ = NULL;
  return temp;
}
inline void RecMessage::set_allocated_maintainvision(::ZSS::Protocol::MaintainVision* maintainvision) {
  delete maintainvision_;
  maintainvision_ = maintainvision;
  if (maintainvision) {
    set_has_maintainvision();
  } else {
    clear_has_maintainvision();
  }
  // @@protoc_insertion_point(field_set_allocated:ZSS.Protocol.RecMessage.maintainVision)
}

// repeated .ZSS.Protocol.Debug_Msgs debugMsgs = 4;
inline int RecMessage::debugmsgs_size() const {
  return debugmsgs_.size();
}
inline void RecMessage::clear_debugmsgs() {
  debugmsgs_.Clear();
}
inline const ::ZSS::Protocol::Debug_Msgs& RecMessage::debugmsgs(int index) const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.RecMessage.debugMsgs)
  return debugmsgs_.Get(index);
}
inline ::ZSS::Protocol::Debug_Msgs* RecMessage::mutable_debugmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.RecMessage.debugMsgs)
  return debugmsgs_.Mutable(index);
}
inline ::ZSS::Protocol::Debug_Msgs* RecMessage::add_debugmsgs() {
  // @@protoc_insertion_point(field_add:ZSS.Protocol.RecMessage.debugMsgs)
  return debugmsgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Debug_Msgs >*
RecMessage::mutable_debugmsgs() {
  // @@protoc_insertion_point(field_mutable_list:ZSS.Protocol.RecMessage.debugMsgs)
  return &debugmsgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Debug_Msgs >&
RecMessage::debugmsgs() const {
  // @@protoc_insertion_point(field_list:ZSS.Protocol.RecMessage.debugMsgs)
  return debugmsgs_;
}

// -------------------------------------------------------------------

// SelectedArea

// required float maxX = 1;
inline bool SelectedArea::has_maxx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectedArea::set_has_maxx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectedArea::clear_has_maxx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectedArea::clear_maxx() {
  maxx_ = 0;
  clear_has_maxx();
}
inline float SelectedArea::maxx() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.SelectedArea.maxX)
  return maxx_;
}
inline void SelectedArea::set_maxx(float value) {
  set_has_maxx();
  maxx_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.SelectedArea.maxX)
}

// required float maxY = 2;
inline bool SelectedArea::has_maxy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectedArea::set_has_maxy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectedArea::clear_has_maxy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectedArea::clear_maxy() {
  maxy_ = 0;
  clear_has_maxy();
}
inline float SelectedArea::maxy() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.SelectedArea.maxY)
  return maxy_;
}
inline void SelectedArea::set_maxy(float value) {
  set_has_maxy();
  maxy_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.SelectedArea.maxY)
}

// required float minX = 3;
inline bool SelectedArea::has_minx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectedArea::set_has_minx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectedArea::clear_has_minx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectedArea::clear_minx() {
  minx_ = 0;
  clear_has_minx();
}
inline float SelectedArea::minx() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.SelectedArea.minX)
  return minx_;
}
inline void SelectedArea::set_minx(float value) {
  set_has_minx();
  minx_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.SelectedArea.minX)
}

// required float minY = 4;
inline bool SelectedArea::has_miny() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SelectedArea::set_has_miny() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SelectedArea::clear_has_miny() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SelectedArea::clear_miny() {
  miny_ = 0;
  clear_has_miny();
}
inline float SelectedArea::miny() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.SelectedArea.minY)
  return miny_;
}
inline void SelectedArea::set_miny(float value) {
  set_has_miny();
  miny_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.SelectedArea.minY)
}

// -------------------------------------------------------------------

// MaintainVision

// required int32 lastTouch = 1;
inline bool MaintainVision::has_lasttouch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaintainVision::set_has_lasttouch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MaintainVision::clear_has_lasttouch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MaintainVision::clear_lasttouch() {
  lasttouch_ = 0;
  clear_has_lasttouch();
}
inline ::google::protobuf::int32 MaintainVision::lasttouch() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MaintainVision.lastTouch)
  return lasttouch_;
}
inline void MaintainVision::set_lasttouch(::google::protobuf::int32 value) {
  set_has_lasttouch();
  lasttouch_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MaintainVision.lastTouch)
}

// required int32 lastTouchTeam = 2;
inline bool MaintainVision::has_lasttouchteam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MaintainVision::set_has_lasttouchteam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MaintainVision::clear_has_lasttouchteam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MaintainVision::clear_lasttouchteam() {
  lasttouchteam_ = 0;
  clear_has_lasttouchteam();
}
inline ::google::protobuf::int32 MaintainVision::lasttouchteam() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MaintainVision.lastTouchTeam)
  return lasttouchteam_;
}
inline void MaintainVision::set_lasttouchteam(::google::protobuf::int32 value) {
  set_has_lasttouchteam();
  lasttouchteam_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.MaintainVision.lastTouchTeam)
}

// repeated .ZSS.Protocol.TeamRobotMsg processMsg = 3;
inline int MaintainVision::processmsg_size() const {
  return processmsg_.size();
}
inline void MaintainVision::clear_processmsg() {
  processmsg_.Clear();
}
inline const ::ZSS::Protocol::TeamRobotMsg& MaintainVision::processmsg(int index) const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MaintainVision.processMsg)
  return processmsg_.Get(index);
}
inline ::ZSS::Protocol::TeamRobotMsg* MaintainVision::mutable_processmsg(int index) {
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.MaintainVision.processMsg)
  return processmsg_.Mutable(index);
}
inline ::ZSS::Protocol::TeamRobotMsg* MaintainVision::add_processmsg() {
  // @@protoc_insertion_point(field_add:ZSS.Protocol.MaintainVision.processMsg)
  return processmsg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >*
MaintainVision::mutable_processmsg() {
  // @@protoc_insertion_point(field_mutable_list:ZSS.Protocol.MaintainVision.processMsg)
  return &processmsg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >&
MaintainVision::processmsg() const {
  // @@protoc_insertion_point(field_list:ZSS.Protocol.MaintainVision.processMsg)
  return processmsg_;
}

// repeated .ZSS.Protocol.TeamRobotMsg maintain = 4;
inline int MaintainVision::maintain_size() const {
  return maintain_.size();
}
inline void MaintainVision::clear_maintain() {
  maintain_.Clear();
}
inline const ::ZSS::Protocol::TeamRobotMsg& MaintainVision::maintain(int index) const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MaintainVision.maintain)
  return maintain_.Get(index);
}
inline ::ZSS::Protocol::TeamRobotMsg* MaintainVision::mutable_maintain(int index) {
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.MaintainVision.maintain)
  return maintain_.Mutable(index);
}
inline ::ZSS::Protocol::TeamRobotMsg* MaintainVision::add_maintain() {
  // @@protoc_insertion_point(field_add:ZSS.Protocol.MaintainVision.maintain)
  return maintain_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >*
MaintainVision::mutable_maintain() {
  // @@protoc_insertion_point(field_mutable_list:ZSS.Protocol.MaintainVision.maintain)
  return &maintain_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::TeamRobotMsg >&
MaintainVision::maintain() const {
  // @@protoc_insertion_point(field_list:ZSS.Protocol.MaintainVision.maintain)
  return maintain_;
}

// required .ZSS.Protocol.Balls4Rec balls = 5;
inline bool MaintainVision::has_balls() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaintainVision::set_has_balls() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaintainVision::clear_has_balls() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaintainVision::clear_balls() {
  if (balls_ != NULL) balls_->::ZSS::Protocol::Balls4Rec::Clear();
  clear_has_balls();
}
inline const ::ZSS::Protocol::Balls4Rec& MaintainVision::balls() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.MaintainVision.balls)
  return balls_ != NULL ? *balls_
                         : *::ZSS::Protocol::Balls4Rec::internal_default_instance();
}
inline ::ZSS::Protocol::Balls4Rec* MaintainVision::mutable_balls() {
  set_has_balls();
  if (balls_ == NULL) {
    balls_ = new ::ZSS::Protocol::Balls4Rec;
  }
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.MaintainVision.balls)
  return balls_;
}
inline ::ZSS::Protocol::Balls4Rec* MaintainVision::release_balls() {
  // @@protoc_insertion_point(field_release:ZSS.Protocol.MaintainVision.balls)
  clear_has_balls();
  ::ZSS::Protocol::Balls4Rec* temp = balls_;
  balls_ = NULL;
  return temp;
}
inline void MaintainVision::set_allocated_balls(::ZSS::Protocol::Balls4Rec* balls) {
  delete balls_;
  balls_ = balls;
  if (balls) {
    set_has_balls();
  } else {
    clear_has_balls();
  }
  // @@protoc_insertion_point(field_set_allocated:ZSS.Protocol.MaintainVision.balls)
}

// -------------------------------------------------------------------

// TeamRobotMsg

// required int32 size = 1;
inline bool TeamRobotMsg::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRobotMsg::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRobotMsg::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRobotMsg::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 TeamRobotMsg::size() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.TeamRobotMsg.size)
  return size_;
}
inline void TeamRobotMsg::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.TeamRobotMsg.size)
}

// repeated .ZSS.Protocol.Robot4Rec robot = 2;
inline int TeamRobotMsg::robot_size() const {
  return robot_.size();
}
inline void TeamRobotMsg::clear_robot() {
  robot_.Clear();
}
inline const ::ZSS::Protocol::Robot4Rec& TeamRobotMsg::robot(int index) const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.TeamRobotMsg.robot)
  return robot_.Get(index);
}
inline ::ZSS::Protocol::Robot4Rec* TeamRobotMsg::mutable_robot(int index) {
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.TeamRobotMsg.robot)
  return robot_.Mutable(index);
}
inline ::ZSS::Protocol::Robot4Rec* TeamRobotMsg::add_robot() {
  // @@protoc_insertion_point(field_add:ZSS.Protocol.TeamRobotMsg.robot)
  return robot_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Robot4Rec >*
TeamRobotMsg::mutable_robot() {
  // @@protoc_insertion_point(field_mutable_list:ZSS.Protocol.TeamRobotMsg.robot)
  return &robot_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Robot4Rec >&
TeamRobotMsg::robot() const {
  // @@protoc_insertion_point(field_list:ZSS.Protocol.TeamRobotMsg.robot)
  return robot_;
}

// -------------------------------------------------------------------

// Robot4Rec

// optional int32 id = 1;
inline bool Robot4Rec::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Robot4Rec::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Robot4Rec::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Robot4Rec::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Robot4Rec::id() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Robot4Rec.id)
  return id_;
}
inline void Robot4Rec::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Robot4Rec.id)
}

// required double posX = 2;
inline bool Robot4Rec::has_posx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Robot4Rec::set_has_posx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Robot4Rec::clear_has_posx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Robot4Rec::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline double Robot4Rec::posx() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Robot4Rec.posX)
  return posx_;
}
inline void Robot4Rec::set_posx(double value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Robot4Rec.posX)
}

// required double posY = 3;
inline bool Robot4Rec::has_posy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Robot4Rec::set_has_posy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Robot4Rec::clear_has_posy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Robot4Rec::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline double Robot4Rec::posy() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Robot4Rec.posY)
  return posy_;
}
inline void Robot4Rec::set_posy(double value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Robot4Rec.posY)
}

// required double angle = 4;
inline bool Robot4Rec::has_angle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Robot4Rec::set_has_angle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Robot4Rec::clear_has_angle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Robot4Rec::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline double Robot4Rec::angle() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Robot4Rec.angle)
  return angle_;
}
inline void Robot4Rec::set_angle(double value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Robot4Rec.angle)
}

// -------------------------------------------------------------------

// Balls4Rec

// required int32 size = 1;
inline bool Balls4Rec::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Balls4Rec::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Balls4Rec::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Balls4Rec::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 Balls4Rec::size() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Balls4Rec.size)
  return size_;
}
inline void Balls4Rec::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Balls4Rec.size)
}

// repeated .ZSS.Protocol.Ball4Rec ball = 2;
inline int Balls4Rec::ball_size() const {
  return ball_.size();
}
inline void Balls4Rec::clear_ball() {
  ball_.Clear();
}
inline const ::ZSS::Protocol::Ball4Rec& Balls4Rec::ball(int index) const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Balls4Rec.ball)
  return ball_.Get(index);
}
inline ::ZSS::Protocol::Ball4Rec* Balls4Rec::mutable_ball(int index) {
  // @@protoc_insertion_point(field_mutable:ZSS.Protocol.Balls4Rec.ball)
  return ball_.Mutable(index);
}
inline ::ZSS::Protocol::Ball4Rec* Balls4Rec::add_ball() {
  // @@protoc_insertion_point(field_add:ZSS.Protocol.Balls4Rec.ball)
  return ball_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Ball4Rec >*
Balls4Rec::mutable_ball() {
  // @@protoc_insertion_point(field_mutable_list:ZSS.Protocol.Balls4Rec.ball)
  return &ball_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ZSS::Protocol::Ball4Rec >&
Balls4Rec::ball() const {
  // @@protoc_insertion_point(field_list:ZSS.Protocol.Balls4Rec.ball)
  return ball_;
}

// -------------------------------------------------------------------

// Ball4Rec

// required double posX = 1;
inline bool Ball4Rec::has_posx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ball4Rec::set_has_posx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ball4Rec::clear_has_posx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ball4Rec::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline double Ball4Rec::posx() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Ball4Rec.posX)
  return posx_;
}
inline void Ball4Rec::set_posx(double value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Ball4Rec.posX)
}

// required double posY = 2;
inline bool Ball4Rec::has_posy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ball4Rec::set_has_posy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ball4Rec::clear_has_posy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ball4Rec::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline double Ball4Rec::posy() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Ball4Rec.posY)
  return posy_;
}
inline void Ball4Rec::set_posy(double value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Ball4Rec.posY)
}

// optional bool valid = 3;
inline bool Ball4Rec::has_valid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ball4Rec::set_has_valid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ball4Rec::clear_has_valid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ball4Rec::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
inline bool Ball4Rec::valid() const {
  // @@protoc_insertion_point(field_get:ZSS.Protocol.Ball4Rec.valid)
  return valid_;
}
inline void Ball4Rec::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
  // @@protoc_insertion_point(field_set:ZSS.Protocol.Ball4Rec.valid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Protocol
}  // namespace ZSS

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_zss_5frec_2eproto__INCLUDED
